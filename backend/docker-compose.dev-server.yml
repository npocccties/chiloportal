version: '3.9'

services:
  https-portal:
    image: steveltn/https-portal:1
    restart: always
    volumes:
      - ${SSL_CERTS_DIR}:/var/lib/https-portal
    ports:
      - '80:80'
      - '443:443'
    networks:
      - app_network
    environment:
      # FORCE_RENEW: 'true'
      STAGE: production
      DOMAINS: '${ALLOWED_HOSTS} -> http://web:8080/'
    depends_on:
      - app
      - web

  web:
    image: nginx:1.23.1
    expose:
      - 8080
    networks:
      - app_network
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/workspace/static
      - ./50x.html:/usr/share/nginx/html/50x.html
    depends_on:
      - app
    restart: always

  app:
    build: .
    tty: true
    expose:
      - 8000
    networks:
      - app_network
    volumes:
      - ./:/workspace
      - ${PWD}/${IMAGE_DIR}:/workspace/output/images/
      - ./logs:/var/log/chiloportal/
      - ./static:/workspace/static
    environment:
      - SECRET_KEY=$SECRET_KEY
      - DB_HOST=$DB_HOST
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
      - DEBUG=$DEBUG
      - LOGGER_LEVEL=$LOGGER_LEVEL
      - ALLOWED_HOSTS=$ALLOWED_HOSTS
      - JUDGE_BADGE=$JUDGE_BADGE
      - PER_PAGE=$PER_PAGE
      - BCRYPT_HASH=$BCRYPT_HASH
    depends_on:
      - db
      - migration
    restart: always

  migration:
    build: .
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python /workspace/manage.py makemigrations; python /workspace/manage.py migrate'
    networks:
      - app_network
    volumes:
      - ./:/workspace
    environment:
      - SECRET_KEY=$SECRET_KEY
      - DB_HOST=$DB_HOST
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
      - DEBUG=$DEBUG
      - LOGGER_LEVEL=$LOGGER_LEVEL
      - ALLOWED_HOSTS=$ALLOWED_HOSTS
    depends_on:
      - db

  db:
    image: postgres:13
    networks:
      - app_network
    environment:
      - TZ=Asia/Tokyo
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASS
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5433:5432
    volumes:
      - ./postgresql/data:/var/lib/postgresql
      - ./sql:/docker-entrypoint-initdb.d
    restart: always

networks:
  app_network:
    driver: bridge
    external: true
